{
	"desc":"\n\nI get a ConvergenceException in  NormalDistributionImpl.cumulativeProbability() for very large/small parameters including Infinity, -Infinity.\nFor instance in the following code:\n	@Test\n	public void testCumulative() {\n		final NormalDistribution nd = new NormalDistributionImpl();\n		for (int i = 0; i < 500; i++) {\n			final double val = Math.exp;\n			try \n{\n				System.out.println(\"val = \" + val + \" cumulative = \" + nd.cumulativeProbability(val));\n			}\n catch (MathException e) \n{\n				e.printStackTrace();\n				fail();\n			}\n		}\n	}\nIn version 2.0, I get no exception. \nMy suggestion is to change in the implementation of cumulativeProbability(double) to catch all ConvergenceException (and return for very large and very small values), not just MaxIterationsExceededException.\n\n", 
	"remain":"\n\nI get a ConvergenceException in  NormalDistributionImpl.cumulativeProbability() for very large/small parameters including Infinity, -Infinity.\nFor instance in the following code:\n	@Test\n		for (int i = 0; i < 500; i++) {\n			try \n				System.out.println(\"val = \" + val + \" cumulative = \" + nd.cumulativeProbability(val));\n catch (MathException e) \n				e.printStackTrace();\n		}\n	}\nIn version 2.0, I get no exception. \nMy suggestion is to change in the implementation of cumulativeProbability(double) to catch all ConvergenceException (and return for very large and very small values), not just MaxIterationsExceededException.\n", 
	"source":"public void testCumulative() {\n		final NormalDistribution nd = new NormalDistributionImpl();\n		for (int i = 0; i < 500; i++) {\n			final double val = Math.exp;\n			try \n{\n				System.out.println(\"val = \" + val + \" cumulative = \" + nd.cumulativeProbability(val));\n			}\n catch (MathException e) \n{\n				e.printStackTrace();\n				fail();\n			}\n		}\n	}", 
	"talks":"", 
	"traces":[], 
	"enums":[]}