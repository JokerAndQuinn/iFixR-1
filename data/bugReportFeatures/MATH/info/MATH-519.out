{
	"desc":"\n\nRunning the following:\n    	double[] observations = \n\n{ \n    			1.1143831578403364E-29, \n    			 4.95281403484594E-28, \n    			 1.1171347211930288E-26, \n    			 1.7044813962636277E-25, \n    			 1.9784716574832164E-24, \n    			 1.8630236407866774E-23, \n    			 1.4820532905097742E-22, \n    			 1.0241963854632831E-21, \n    			 6.275077366673128E-21, \n    			 3.461808994532493E-20, \n    			 1.7407124684715706E-19, \n    			 8.056687953553974E-19, \n    			 3.460193945992071E-18, \n    			 1.3883326374011525E-17, \n    			 5.233894983671116E-17, \n    			 1.8630791465263745E-16, \n    			 6.288759227922111E-16, \n    			 2.0204433920597856E-15, \n    			 6.198768938576155E-15, \n    			 1.821419346860626E-14, \n    			 5.139176445538471E-14, \n    			 1.3956427429045787E-13, \n    			 3.655705706448139E-13, \n    			 9.253753324779779E-13, \n    			 2.267636001476696E-12, \n    			 5.3880460095836855E-12, \n    			 1.2431632654852931E-11 \n    	}\n;\n    	GaussianFitter g = \n    		new GaussianFitter(new LevenbergMarquardtOptimizer());\n    	for (int index = 0; index < 27; index++)\n    	{\n    		g.addObservedPoint(index, observations[index]);\n    	}\n       	g.fit();\nResults in:\norg.apache.commons.math.exception.NotStrictlyPositiveException: -1.277 is smaller than, or equal to, the minimum (0)\n	at org.apache.commons.math.analysis.function.Gaussian$Parametric.validateParameters(Gaussian.java:184)\n	at org.apache.commons.math.analysis.function.Gaussian$Parametric.value(Gaussian.java:129)\nI'm guessing the initial guess for sigma is off.  \n\n", 
	"remain":"\n\nRunning the following:\n    	double[] observations = \n\n{ \n    			1.1143831578403364E-29, \n    			 4.95281403484594E-28, \n    			 1.1171347211930288E-26, \n    			 1.7044813962636277E-25, \n    			 1.9784716574832164E-24, \n    			 1.8630236407866774E-23, \n    			 1.4820532905097742E-22, \n    			 1.0241963854632831E-21, \n    			 6.275077366673128E-21, \n    			 3.461808994532493E-20, \n    			 1.7407124684715706E-19, \n    			 8.056687953553974E-19, \n    			 3.460193945992071E-18, \n    			 1.3883326374011525E-17, \n    			 5.233894983671116E-17, \n    			 1.8630791465263745E-16, \n    			 6.288759227922111E-16, \n    			 2.0204433920597856E-15, \n    			 6.198768938576155E-15, \n    			 1.821419346860626E-14, \n    			 5.139176445538471E-14, \n    			 1.3956427429045787E-13, \n    			 3.655705706448139E-13, \n    			 9.253753324779779E-13, \n    			 2.267636001476696E-12, \n    			 5.3880460095836855E-12, \n    			 1.2431632654852931E-11 \n    	}\n;\n    	GaussianFitter g = \n    	for (int index = 0; index < 27; index++)\n    	{\n       	g.fit();\norg.apache.commons.math.exception.NotStrictlyPositiveException: -1.277 is smaller than, or equal to, the minimum (0)\n	at org.apache.commons.math.analysis.function.Gaussian$Parametric.value(Gaussian.java:129)\n", 
	"source":"new GaussianFitter(new LevenbergMarquardtOptimizer());\n    		g.addObservedPoint(index, observations[index]);\n       	g.fit();", 
	"talks":"", 
	"traces":[
		"at org.apache.commons.math.analysis.function.Gaussian$Parametric.validateParameters(Gaussian.java:184)\nat org.apache.commons.math.analysis.function.Gaussian$Parametric.value(Gaussian.java:129)\n" ], 
	"enums":[
		"    		g.addObservedPoint(index, observations[index]);\n    	}\n       	g.fit();\nResults in:\norg.apache.commons.math.exception.NotStrictlyPositiveException: -1.277 is smaller than, or equal to, the minimum (0)\n	at org.apache.commons.math.analysis.function.Gaussian$Parametric.validateParameters(Gaussian.java:184)\n	at org.apache.commons.math.analysis.function.Gaussian$Parametric.value(Gaussian.java:129)\nI'm guessing the initial guess for sigma is off.  \n" ]}