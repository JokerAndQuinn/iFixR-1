{
	"desc":"\n\nWhen running this unittest, I am facing this NPE:\njava.lang.NullPointerException\n	at org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(KMeansPlusPlusClusterer.java:91)\nThis is the unittest:\npackage org.fao.fisheries.chronicles.calcuation.cluster;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Random;\nimport org.apache.commons.math.stat.clustering.Cluster;\nimport org.apache.commons.math.stat.clustering.EuclideanIntegerPoint;\nimport org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer;\nimport org.fao.fisheries.chronicles.input.CsvImportProcess;\nimport org.fao.fisheries.chronicles.input.Top200Csv;\nimport org.junit.Test;\npublic class ClusterAnalysisTest {\n	@Test\n	public void testPerformClusterAnalysis2() {\n		KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<EuclideanIntegerPoint>(\n				new Random(1746432956321l));\n		EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {\n				new EuclideanIntegerPoint(new int[] \n{ 1959, 325100 }\n),\n				new EuclideanIntegerPoint(new int[] \n{ 1960, 373200 }\n), };\n		List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);\n		assertEquals(1, clusters.size());\n	}\n}\n\n", 
	"remain":"\n\nWhen running this unittest, I am facing this NPE:\njava.lang.NullPointerException\nThis is the unittest:\nimport static org.junit.Assert.assertTrue;\nimport java.util.List;\nimport org.apache.commons.math.stat.clustering.Cluster;\nimport org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer;\nimport org.fao.fisheries.chronicles.input.Top200Csv;\npublic class ClusterAnalysisTest {\n	public void testPerformClusterAnalysis2() {\n				new Random(1746432956321l));\n				new EuclideanIntegerPoint(new int[] \n),\n{ 1960, 373200 }\n		List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);\n}\n", 
	"source":"package org.fao.fisheries.chronicles.calcuation.cluster;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Random;\nimport org.apache.commons.math.stat.clustering.Cluster;\nimport org.apache.commons.math.stat.clustering.EuclideanIntegerPoint;\nimport org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer;\nimport org.fao.fisheries.chronicles.input.CsvImportProcess;\nimport org.fao.fisheries.chronicles.input.Top200Csv;\nimport org.junit.Test;\npublic class ClusterAnalysisTest {\n	@Test\n	public void testPerformClusterAnalysis2() {\n		KMeansPlusPlusClusterer<EuclideanIntegerPoint> transformer = new KMeansPlusPlusClusterer<EuclideanIntegerPoint>(\n				new Random(1746432956321l));\n		EuclideanIntegerPoint[] points = new EuclideanIntegerPoint[] {\n				new EuclideanIntegerPoint(new int[] \n{ 1959, 325100 }\n),\n				new EuclideanIntegerPoint(new int[] \n{ 1960, 373200 }\n), };\n		List<Cluster<EuclideanIntegerPoint>> clusters = transformer.cluster(Arrays.asList(points), 1, 1);\n		assertEquals(1, clusters.size());\n	}\n}", 
	"talks":"", 
	"traces":[
		"at org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(KMeansPlusPlusClusterer.java:91)\n" ], 
	"enums":[]}