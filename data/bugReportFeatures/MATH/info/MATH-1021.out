{
	"desc":"\n\nHi, I have an application which broke when ported from commons math 2.2 to 3.2. It looks like the HypergeometricDistribution.sample() method doesn't work as well as it used to with large integer values – the example code below should return a sample between 0 and 50, but usually returns -50.\n\nimport org.apache.commons.math3.distribution.HypergeometricDistribution;\n\npublic class Foo {\n  public static void main(String[] args) {\n    HypergeometricDistribution a = new HypergeometricDistribution(\n        43130568, 42976365, 50);\n    System.out.printf(\"%d %d%n\", a.getSupportLowerBound(), a.getSupportUpperBound()); // Prints \"0 50\"\n    System.out.printf(\"%d%n\",a.sample());                                             // Prints \"-50\"\n  }\n}\n\n\nIn the debugger, I traced it as far as an integer overflow in HypergeometricDistribution.getNumericalMean() – instead of doing\n\nreturn (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\n\n\nit could do:\n\nreturn getSampleSize() * ((double) getNumberOfSuccesses() / (double) getPopulationSize());\n\n\nThis seemed to fix it, based on a quick test.\n\n", 
	"remain":"\n\nHi, I have an application which broke when ported from commons math 2.2 to 3.2. It looks like the HypergeometricDistribution.sample() method doesn't work as well as it used to with large integer values – the example code below should return a sample between 0 and 50, but usually returns -50.\n\n\n  public static void main(String[] args) {\n        43130568, 42976365, 50);\n    System.out.printf(\"%d%n\",a.sample());                                             // Prints \"-50\"\n}\n\n\nIn the debugger, I traced it as far as an integer overflow in HypergeometricDistribution.getNumericalMean() – instead of doing\n\n\n\nit could do:\n\nreturn getSampleSize() * ((double) getNumberOfSuccesses() / (double) getPopulationSize());\n\n\nThis seemed to fix it, based on a quick test.\n", 
	"source":"import org.apache.commons.math3.distribution.HypergeometricDistribution;\npublic class Foo {\n  public static void main(String[] args) {\n    HypergeometricDistribution a = new HypergeometricDistribution(\n        43130568, 42976365, 50);\n    System.out.printf(\"%d %d%n\", a.getSupportLowerBound(), a.getSupportUpperBound()); // Prints \"0 50\"\n    System.out.printf(\"%d%n\",a.sample());                                             // Prints \"-50\"\n  }\n}\nreturn (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();\nreturn getSampleSize() * ((double) getNumberOfSuccesses() / (double) getPopulationSize());", 
	"talks":"", 
	"traces":[], 
	"enums":[]}