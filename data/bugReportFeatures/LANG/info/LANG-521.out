{
	"desc":"\n\nNumberUtils.isNumber() should return true for a valid number ending in a trailing decimal place; e.g., \"2.\" should be considered a number because new BigDecimal(\"2.\") works fine.  This could be done by adding the code below after line 1444, which is the if (chars[i] == 'e' || chars[i] == 'E') block.\nif (chars[i] == '.') {\n    if (hasDecPoint || hasExp) \n{\n        // two decimal points or dec in exponent   \n        return false;\n    }\n    return foundDigit; // single trailing decimal point after non-exponent is ok\n}\n\n", 
	"remain":"\n\nNumberUtils.isNumber() should return true for a valid number ending in a trailing decimal place; e.g., \"2.\" should be considered a number because new BigDecimal(\"2.\") works fine.  This could be done by adding the code below after line 1444, which is the if (chars[i] == 'e' || chars[i] == 'E') block.\n{\n        return false;\n    return foundDigit; // single trailing decimal point after non-exponent is ok\n", 
	"source":"if (chars[i] == '.') {\n    if (hasDecPoint || hasExp) \n{\n        // two decimal points or dec in exponent   \n        return false;\n    }\n    return foundDigit; // single trailing decimal point after non-exponent is ok\n}", 
	"talks":"", 
	"traces":[], 
	"enums":[]}